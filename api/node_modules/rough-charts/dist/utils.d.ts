import * as React from 'react';
import { Scale } from './baseTypes';
export declare const isNil: (x: any) => boolean;
export declare const isFunction: (x: any) => boolean;
export declare const removeDuplicates: <T extends any>(xs: T[]) => string[];
export declare const getBandWidth: (scale: Scale) => number;
export declare const processTooltipHandlers: (child: any, handlers: {
    [key: string]: (e: any) => void;
}) => React.ReactElement<unknown, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
export declare const cloneElement: (f: (displayName: string, props: object) => object, child: any) => React.DetailedReactHTMLElement<object, HTMLElement>;
export declare const mapChildren: (f: (displayName: string, props: object, index: number) => object, children: any) => any;
export declare const filterChildren: (f: (displayName: string, child: any, index: number) => any, children: any) => any[];
